server:
  port: 8060
#熔断器
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000

ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000


#服务名
spring:
  cloud:
    gateway:
      discovery:
        locator:
          # 是否与服务注册于发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能
          enabled: false
      filter:
        remove-non-proxy-headers:
          headers:
            - dummy
      routes:
        - id:  auth
          # 重点！/info必须使用http进行转发，lb代表从注册中心获取服务
          uri: lb://auth-service
          predicates:
            # 重点！转发该路径！,/userapi/**,
            - Path=/auth/**
          # http://localhost:6601/userapi/user/users/2, 必须加上StripPrefix=1，否则访问服务时会带上userapi
          #而不是我们期望的去掉userapi，只保留**部分
          filters:
            # 表示从二级url路径转发，即http://localhost:port/activity/test将会转发到http://{activity}/test
            - StripPrefix=1
            - name: Hystrix
              args:
                name: fallbackcmd
                fallbackUri: forward:/fallback
        - id:  sa
          uri: lb://sa-service
          predicates:
            - Path=/sa/**
          filters:
            - StripPrefix=1
        - id:  sb
          uri: lb://sb-service
          predicates:
            - Path=/sb/**
          filters:
            - StripPrefix=1

# 调整相关包的 log 级别，以便排查问题
logging:
  level:
    org.springframework.cloud.gateway: debug